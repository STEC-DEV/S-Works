@page "/vocqredit"
@inject HttpClient Http
@inject IJSRuntime JS

@using FamTec.Shared.Model

<h3>VocQREdit</h3>

@* 사업장ID *@
<div>
    <span>사업장 ID: </span>
    @if (place is [_, ..])
    {
        @*@onchange = "@((ChangeEventArgs __e) => InputValue = __e?.Value?.ToString())" />*@
        <select value="_placecd" @onchange="OnChangedEvent">
            <option value="" hidden>---------</option>
            @foreach(var item in place)
            {
                <option value="@item.PlaceCd" selected>@item.Name</option>
            }
    </select>
    }
</div>

@* 건물ID *@
<div>
    <span>건물 ID: </span>
    @if (building is [_, ..])
    {
         
        <InputSelect @bind-Value="_buildingcd" >
            @foreach(var item in building)
            {
                <option value="@item.BuildingCd">@item.Name</option>
            }
        </InputSelect>
    }

    
</div>
@* 공간ID *@

@* 층ID *@

@code {
    private string _placecd{ get; set; } // 사업장 코드
    private string _buildingcd{ get; set; } // 건물 코드
    private int _roomid{ get; set; } // 공간ID
    private int _floorid{ get; set; } // 층ID

    private PlacesTb[]? place;
    private BuildingsTb[]? building;
    private UsersTb? user;
    //https://localhost:8888/api/Buildings/SelectBuilding/P001



    protected override async Task OnInitializedAsync()
    {
        try{
            string userid = "test";
            user = await Http.GetFromJsonAsync<UsersTb>($"api/Users/SelectUserId/{userid}");
            
            //place = await Http.GetFromJsonAsync<PlacesTb[]>("api/Places/SelectPlace");

            //building = await Http.GetFromJsonAsync<BuildingsTb[]>("")
            StateHasChanged();
        }
        catch(Exception ex)
        {

        }

    }
  
    void OnChangedEvent(ChangeEventArgs e)
    {
        JS.InvokeAsync<object>("alert", "1");

        /*
        if (!String.IsNullOrWhiteSpace(_placecd))
        {
            string requesturl = $"api/Buildings/SelectBuilding/{_placecd}";
            //building = await Http.GetFromJsonAsync<BuildingsTb[]>($"api/Buildings/SelectBuilding/{_placecd}");
            building = await Http.GetFromJsonAsync<BuildingsTb[]>(requesturl);
            StateHasChanged();
            //JS.InvokeAsync<object>("alert", building.Length);
        }
        */
    }





}
