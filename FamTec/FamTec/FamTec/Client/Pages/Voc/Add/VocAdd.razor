@layout MainLayout2
@page "/voc/add"
@using FamTec.Client.Pages.CommonComponents
@using FamTec.Client.Pages.Voc.Add.Components
@using FamTec.Shared.Client.Class
@using FamTec.Shared.Client.DTO.Normal.Voc
@using FamTec.Shared.Server.DTO

<div class="voc ">
    <div class="header yappear">
        <span class="title">
            민원 접수
        </span>
    </div>
    <div class="content yappear">
        <InputCol Label="성함"
                  @bind-Value=@Voc.Name
                  Placeholder="성함" />
        <InputCol Label="휴대폰 번호"
                  @bind-Value=@Voc.PhoneNumber
                  Placeholder="휴대폰 번호" />
        <InputCol Label="제목"
                  @bind-Value=@Voc.Title
                  Placeholder="제목" />
        <VocInput Label="내용"
                  @bind-Value=@Voc.Contents
                  Placeholder="내용"
                  TextArea=true
                  Height=true />
        <InputImages MaxFilesNum="3" OnChange="OnUploadImage" />
    </div>
    <div class="btns yappear">
        <Button Name="접수" Type="0" OnClick="@OnAdd"/>
        <Button Name="취소" Type="1" OnClick="@Return" />
    </div>
</div>

@code {
    [Parameter] public int PlaceId { get; set; } = 3;
    [Parameter] public int BuildingId { get; set; } = 1;
    AddVoc Voc = new AddVoc();
    AddVocReturnDTO ResponseData = new AddVocReturnDTO();
    int maxAllowedFiles = 3;

    private async Task OnAdd()
    {
        try
        {
            Console.WriteLine(Voc.Name);
            Console.WriteLine(Voc.PhoneNumber);
            Console.WriteLine(Voc.Title);
            Console.WriteLine(Voc.Contents);

            Voc.Placeid = PlaceId;
            Voc.Buildingid = BuildingId;
            ResponseUnit<AddVocReturnDTO> resAdd = await apiManager.PostWithFilesAsync<AddVocReturnDTO>("Hub/AddVoc", Voc);
            if(resAdd.code != 200)
            {
                await JS.InvokeVoidAsync("alert", "민원 추가 실패");
            }
            ResponseData = resAdd.data;
            Navigation.NavigateTo($"/voc/add/result?code={resAdd.code}&Cd={ResponseData.ReceiptCode}&Num={ResponseData.PhoneNumber}&Dt={ResponseData.CreateDT}");
        }catch(Exception ex)
        {
            Console.WriteLine(ex);
            await JS.InvokeVoidAsync("alert", "민원 추가 에러");
        }
    }

    private async void OnUploadImage(List<ImageFile> images)
    {
        List<byte[]> temp = new List<byte[]>();
        List<string> names = new List<string>();
        foreach(var image in images)
        {
            temp.Add(image.Image);
            names.Add(image.Name);

        }
        Voc.Image = temp;
        Voc.ImageName = names;
    }

    private void Return()
    {
        Navigation.NavigateTo("/voc/banner");
    }
}
