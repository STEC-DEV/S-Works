@using FamTec.Client.Pages.CommonComponents.IconButton


<div class="modal" @ref="modalRef" @onkeydown="@HandleKeyPress" tabindex="0">
    <div class="btn">
        <CloseXButton OnClick="OnClosed" Color="white" />
    </div>
    <div class="content">
        @if(ImageList.Count > 1)
        {
            <div class="left-btn">
                <LeftLineButton OnClick="ShowPreviousImage" Color="white" />
            </div>
        }
        <div class="img-wrap">
            <img class="img" src="@ImageList[CurrentImageIndex]" />
        </div>
        @if (ImageList.Count > 1)
        {
            <div class="right-btn">
                <RightLineButton OnClick="ShowNextImage" Color="white" />
            </div>
        }
    </div>

</div>

@code {
    [Parameter] public List<string> ImageList { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }

    private int CurrentImageIndex = 0;

    private ElementReference modalRef;

    // protected override async Task OnInitializedAsync()
    // {
    //     foreach (var imageUrl in ImageList)
    //     {
    //         // 이미지 프리로드 로직 추가
    //         await JS.InvokeVoidAsync("preloadImage", imageUrl);
    //     }
    // }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await modalRef.FocusAsync();
        }
    }

    private async Task ShowPreviousImage()
    {
        if (CurrentImageIndex > 0)
        {
            CurrentImageIndex--;
        }
        await InvokeAsync(() => StateHasChanged());
    }

    private async Task ShowNextImage()
    {
        if (CurrentImageIndex < ImageList.Count - 1)
        {
            CurrentImageIndex++;
        }
        StateHasChanged();
    }

    private async Task OnClosed()
    {
        await OnClose.InvokeAsync();
    }

    private async Task HandleKeyPress(KeyboardEventArgs e)
    {
        if(e.Key == "Escape")
        {
            await OnClosed();
        }
    }

}
