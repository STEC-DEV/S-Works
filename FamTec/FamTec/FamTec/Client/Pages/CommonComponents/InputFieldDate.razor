
<div class="inputdate-container">
    <label class="inputdate-label">
        @Label
    </label>
    <input class="inputdate-input @(EditMode ? null : "block")"
        type="@InputType"
        value="@Value.ToString("yyyy-MM-dd")"
        @oninput="OnInputChange"
        @onblur="OnBlur"
        disabled="@(!EditMode)"
    />
    @if (Duplication)
    {
        <button class="btn" type="button" @onclick="OnClick" value="@Value">
            중복확인
        </button>
    }
    
    
</div>

@code {
    [Parameter] public string Label { get; set; }
    [Parameter] public string InputType{ get; set; }
    [Parameter] public DateTime Value { get; set; } = DateTime.Today;
    [Parameter] public string Placeholder { get; set; }
    [Parameter] public bool EditMode { get; set; }
    [Parameter] public bool Duplication { get; set; }
    [Parameter] public EventCallback<DateTime> ValueChanged { get; set; }
    [Parameter] public EventCallback OnBlur{ get; set; }
    [Parameter] public EventCallback OnClick{get;set;}


    protected override void OnInitialized()
    {
        if (Value == default(DateTime))
        {
            Value = DateTime.Today; // 현재 날짜로 초기화
        }
    }


    private void OnInputChange(ChangeEventArgs e)
    {
        if (DateTime.TryParse(e.Value?.ToString(), out DateTime parsedDate))
        {
            Value = parsedDate;
            ValueChanged.InvokeAsync(parsedDate); // 부모 컴포넌트에 변경 사항 알림
        }
        else
        {
            // 잘못된 입력을 처리할 경우 여기에 추가
        }
    }

}
