@using System.Reflection
@using System.ComponentModel.DataAnnotations
@using FamTec.Shared.Client.DTO
@inject NavigationManager Navigation
@inherits PermissionComponentBase

<table class="table-container">
    <thead class="table-head">
        <tr class="thead-tr">
            <th class="table-th">
                
                아이디
                
            </th>
            <th class="table-th">
                이름
            </th>
            <th class="table-th">
                부서
            </th>
            @if (ADMINEDIT)
            {
                <th class="table-th">
                </th>
            }
            
        </tr>
    </thead>

    <tbody class="table-body">
        @if (ListData.Count == 0)
        {
            <tr>
                <td colspan="100" style="text-align:center;">
                    <Empty />
                </td>
            </tr>
        }

        else
        {
            @foreach (ManagerDTO row in ListData)
            {
                <tr class="tbody-tr">
                    <td class="table-td" @onclick="()=>OnDetail(row.Id)">
                        @row.UserId
                    </td>
                    <td class="table-td" @onclick="()=>OnDetail(row.Id)">
                        @row.Name
                    </td>
                    <td class="table-td" @onclick="()=>OnDetail(row.Id)">
                        @row.Department
                    </td>
                    @if (ADMINEDIT)
                    {
                        <td class="table-td">
                            <input type="checkbox"
                                    @onchange="e=> InVokeCheckboxSelect(e,row.Id, row)"
                                    checked=@(CheckItems.Contains(row.Id)) />
                        </td>
                    }

                </tr>
            }
        }



    </tbody>
    
    
</table>

@code {
    [Parameter] public List<ManagerDTO> ListData { get; set; }
    [Parameter] public EventCallback<(bool, ManagerDTO)> OnCheck { get; set; }
    [Parameter] public string Url { get; set; }
    [Parameter] public bool Detail { get; set; }
    [Parameter] public string ReturnType { get; set; }
    [Parameter] public List<int> CheckItems { get; set; }


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    private async Task InVokeCheckboxSelect(ChangeEventArgs e, int id, ManagerDTO item)
    {
        bool isChecked = (bool)(e.Value ?? false);

        await OnCheck.InvokeAsync(((bool)e.Value, item));
    }

    private async Task OnDetail(int id)
    {
        Navigation.NavigateTo($"/admin/manager/{id}");
    }

}