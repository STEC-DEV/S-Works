@using FamTec.Client.Pages.CommonComponents
@using FamTec.Shared.Client.DTO.Normal.Facility
@inherits PermissionComponentBase

<table class="table">
    <thead class="thead">
        <tr class="thead-rt">
            <th class="th">
                <span>
                    설비유형
                </span>
            </th>
            <th class="th">
                <span>
                   작업년월
                </span>
            </th>
            <th class="th">
                <span>
                    수리(보수) 이력
                </span>
            </th>
            <th class="th">
                <span>
                    작업구분
                </span>
            </th>
            <th class="th">
                <span>
                    작업자
                </span>
            </th>
            <th class="th">
                <span>
                    사용자재
                </span>
            </th>
            <th class="th">
                <span>
                    소요비용
                </span>
            </th>
            @* @if (HasEditPermission())
            {
                <th class="th">
                    <span>
                    </span>
                </th>
            } *@
            
        </tr>
    </thead>
    <tbody class="tbody">
        @if(ListData.Count == 0)
        {
            <tr>
                <td colspan="100" style="text-align:center">
                    @* <Empty /> *@
                </td>
            </tr>
        }
        else
        {
            @foreach (var row in ListData)
            {
                <tr class="tbody-tr">
                    <td class="td pointer" @onclick="()=>OnDetail(row.FacilityId,row.MaintenanceId,row.Category)">
                        @row.Category
                    </td>
                    <td class="td pointer" @onclick="()=>OnDetail(row.FacilityId,row.MaintenanceId ,row.Category)">
                        @row.WorkDT?.Split(" ")[0]
                    </td>
                    <td class="td pointer" @onclick="()=>OnDetail(row.FacilityId,row.MaintenanceId ,row.Category)">
                        @row.HistoryTitle
                    </td>
                    <td class="td pointer" @onclick="()=>OnDetail(row.FacilityId,row.MaintenanceId ,row.Category)">
                        @(row.Type == 0 ? "자체 작업" : "외주 작업")
                    </td>
                    <td class="td pointer" @onclick="()=>OnDetail(row.FacilityId,row.MaintenanceId,row.Category)">
                        @row.Worker
                    </td>
                    <td class="td pointer" @onclick="()=>OnDetail(row.FacilityId,row.MaintenanceId,row.Category)">
                        @row.HistoryMaterialList.Count()
                    </td>
                    <td class="td pointer" @onclick="()=>OnDetail(row.FacilityId,row.MaintenanceId,row.Category)">
                        @row.TotalPrice
                    </td>
                </tr>
            }
        }
       
    </tbody>
</table>

@code {
    [Parameter] public List<MaintanceHistoryDTO> ListData { get; set; }
    [Parameter] public EventCallback<(bool,int)> OnCheck { get; set; }
    [Parameter] public List<int> Checkitems { get; set; }

    string FacType="";
    string EngFacType="";

    protected override async Task OnInitializedAsync()
    {
        base.OnInitializedAsync();
    }

    private void OnDetail(int facId, int maintenanceid, string factype)
    {
        ConvertFactype(factype);
        Navigation.NavigateTo($"/facility/{EngFacType}/{facId}/maintenance/{maintenanceid}");

    }

    private async void OnChecked(ChangeEventArgs e, int id)
    {
        await OnCheck.InvokeAsync(((bool)e.Value, id));
    }


    private bool HasEditPermission()
    {
        return FacType switch
        {
            "machine" => MACHINE,
            "electronic" => ELEC,
            "lift" => LIFT,
            "fire" => FIRE,
            "construct" => CONSTRUCT,
            "network" => NETWORK,
            "beauty" => BEAUTY,
            "security" => SECURITY,
            _ => false
        };
    }

    private string ConvertFactype(string type)
    {
        EngFacType = type switch
        {
            "기계"=>"machine",
            "전기" => "electronic",
            "승강" => "lift",
            "소방" => "fire",
            "건축" => "construct",
            "통신" => "network",
            "미화" => "beauty",
            "보안" => "security",
            _ => "Unknown"
        };

        return EngFacType;
    }
}


@code {

}
