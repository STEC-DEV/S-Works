@using FamTec.Client.Pages.CommonComponents
@using FamTec.Client.Pages.Normal.Facility.Maintenance.DetailMaintence.Modal
@using FamTec.Shared.Client.DTO.Normal.Facility
@using FamTec.Shared.Client.DTO.Normal.Facility.Maintenance
@using FamTec.Shared.Client.DTO.Normal.Material.InOut


<table class="table">
    <thead class="thead">
        <tr class="thead-tr">
            <th class="th">
                <span>
                    품목코드
                </span>
            </th>
            <th class="th">
                <span>
                    품목명
                </span>
            </th>
            <th class="th">
                <span>
                    위치
                </span>
            </th>
            <th class="th">
                <span>
                    수량
                </span>
            </th>
            <th class="th">
                <span>
                    단위
                </span>
            </th>
            @if (!EditMode)
            {
                <th class="th">
                    <span>
                        금액
                    </span>
                </th>
            }
            <th class="th">
                <span>
                    비고
                </span>
            </th>
            @if (EditMode)
            {
                <th class="th">
                    <span>

                    </span>
                </th>
            }
            
        </tr>
    </thead>
    <tbody class="tbody">
        @if(ListData.UpdateUsematerialDTO.Count == 0)
        {
            <tr>
                <td colspan="100" style="text-align:center;">
                    @* <Empty /> *@
                </td>
            </tr>
        }
        else
        {
            @foreach (UpdateUseMaterialDTO row in ListData.UpdateUsematerialDTO)
            {

                <tr class="tr">
                    <td class="td @(EditMode? "pointer":"")" @onclick="() => OnRowClick(row)">
                        @row.MaterialCode
                    </td>
                    <td class="td @(EditMode? "pointer":"")" @onclick="() => OnRowClick(row)">
                        @row.MaterialName
                    </td>
                    <td class="td @(EditMode? "pointer":"")" @onclick="() => OnRowClick(row)">
                        @row.RoomName
                    </td>
                    <td class="td @(EditMode? "pointer":"")" @onclick="() => OnRowClick(row)">
                        @row.Num
                    </td>
                    <td class="td @(EditMode? "pointer":"")" @onclick="() => OnRowClick(row)">
                        @row.Unit
                    </td>
                    @if (!EditMode)
                    {
                        <td class="td text-right @(EditMode? "pointer":"")" @onclick="() => OnRowClick(row)">
                            @row.Price?.ToString("N0")
                        </td>
                    }
                    <td class="td @(EditMode? "pointer":"")" @onclick="() => OnRowClick(row)">
                        @row.Note
                    </td>
                    @if (EditMode)
                    {
                        <td class="td">
                            <input class="@(EditMode? "pointer":"")"
                                type="checkbox" 
                                @onchange="(e)=>OnChecked(e,row)" 
                                checked="@(CheckItems?.Any(m => m.MaterialID == row.MaterialID))"
                                />
                        </td>
                    }

                </tr>

            }
        }
        
        
    </tbody>
</table>

@if (showUpdateModal)
{
    <ModalBackground>
        <ChildComponent>
            <UpdateUseMaterialModal 
                Data="selectedMaterial"
                OnCancel="CloseModal" 
                OnLoadMaintenance="OnLoadMaintenance"
                />
        </ChildComponent>
    </ModalBackground>
}

@code {
    // [Parameter] public List<InOutInventoryDTO>? ListData { get; set; }
    // [Parameter] public List<UseMaterialDTO>? ListData { get; set; }
    [Parameter] public UpdateMaintancematerialDTO ListData { get; set; }
    [Parameter] public EventCallback<(bool, UpdateUseMaterialDTO)> OnCheck { get; set; }
    [Parameter] public bool EditMode { get; set; }
    [Parameter] public EventCallback OnLoadMaintenance { get; set; }
    [Parameter] public List<UpdateUseMaterialDTO> CheckItems { get; set; }

    private bool showUpdateModal = false;
    private UpdateUseMaterialDTO? selectedMaterial;
    private int selectUseMaterialId;
    private int selectUseMaterialCurNum;


    private async void OnChecked(ChangeEventArgs e, UpdateUseMaterialDTO material)
    {
        await OnCheck.InvokeAsync(((bool)e.Value, material));
    }

    private void OnRowClick(UpdateUseMaterialDTO material)
    {
        if (EditMode)
        {
            selectedMaterial = material;
            showUpdateModal = true;
            selectUseMaterialId = material.MaterialID;
            selectUseMaterialCurNum = material.Num;
        }
    }

    private void CloseModal()
    {
        showUpdateModal = false;
        selectedMaterial = null;
    }

}
