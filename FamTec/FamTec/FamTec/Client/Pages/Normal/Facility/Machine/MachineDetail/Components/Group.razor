@inherits PermissionComponentBase
@using FamTec.Client.Pages.CommonComponents
@using FamTec.Client.Pages.Normal.Facility.Machine.MachineDetail.Modal
@using FamTec.Shared.Client.DTO.Normal.Facility.Group




<div class="group yappear">
    <div class="header">
        <span class="title">
            @GroupData.Name
        </span>
        @if (USEREDIT)
        {
            <div class="options">

                @if (EditMode)
                {
                    <Button Name="추가" Width=true Type="0" OnClick="OnModal" />
                    <Button Name="삭제" Width=true Type="1" />
                    <Button Name="취소" Width=true Type="1" OnClick="OnEditMode" />
                }
                else
                {
                    <Button Name="편집" Width=true Type="0" OnClick="OnEditMode" />
                }
            </div>
        }
        
    </div>
    <div class="content">
        @foreach(var item in GroupData.keyListDTO)
        {
            <SubItem item="item" EditMode=EditMode OnLoad="LoadGroup" />
        }
    </div>
    @if (IsModal)
    {
        <ModalBackground>
            <ChildComponent>
                <SubItemModal OnClose="OnModal" GroupId="@GroupData.id" LoadGroup="LoadGroup" />
            </ChildComponent>
        </ModalBackground>
    }
    @* <button class="del-group">삭제</button> *@
</div>

@code {
    [Parameter] public GroupDTO? GroupData { get; set; }
    // [Parameter] public bool EditMode { get; set; } = false;
    [Parameter] public EventCallback LoadGroup { get; set; }
    bool IsModal = false;
    bool EditMode = false;

    protected override async Task OnInitializedAsync()
    {

        await base.OnInitializedAsync();
    }



    private void OnModal()
    {
        IsModal = !IsModal;
    }

    private void OnEditMode()
    {
        EditMode = !EditMode;
    }
}
