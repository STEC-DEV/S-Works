@page "/facility/{FacType}"
@using FamTec.Client.Pages.CommonComponents
@using FamTec.Client.Pages.Normal.Facility.Machine.MachineMain.Components
@using FamTec.Shared.Client.DTO.Normal.Facility
@using FamTec.Shared.Server.DTO
@inherits PermissionComponentBase

<div class="fac-container">
    <div class="fac-wrap">
        <div class="fac-header">
            <span class="title">
                @title 설비
            </span>
            @if (USEREDIT)
            {
                <div class="header-options">
                    <Button Name="등록" Width=true Type=0 OnClick="@onAdd" />
                    <Button Name="삭제" Width=true Type=1 />
                </div>
            }
            
        </div>
        <FacilityTable ListData="ListFacility" FacType="@FacType" />
    </div>
    
</div>

@code {
    [Parameter] public string FacType { get; set; }

    List<FacilityListDTO> ListFacility;
    private string title = "";

    protected override async Task OnInitializedAsync()
    {
        base.OnInitializedAsync();
        ConvertType();
        // ListFacility = new List<FacilityListDTO>();
        await OnLoadMahine();

    }

    protected override async Task OnParametersSetAsync()
    {
        ConvertType();
        // ListFacility = new List<FacilityListDTO>();
        await OnLoadMahine();

    }

    private void ConvertType()
    {
        Console.WriteLine("설비타입" + FacType);
        title = FacType switch
        {
            "machine" => "기계",
            "electronic" => "전기",
            "lift" => "승강",
            "fire" => "소방",
            "construct" => "건물",
            "network" => "통신",
            "beauty" => "미화",
            "security" => "보안",
            _ => "기계"
        };
        StateHasChanged();
    }

    //여기도 타입에 따라 데이터 수정
    private async Task OnLoadMahine()
    {
        ResponseList<FacilityListDTO> resGetData = await apiManager.GetListAsync<FacilityListDTO>($"{FacType}Facility/sign/GetAll{FacType}Facility");
        foreach(var i in resGetData.data)
        {
            Console.WriteLine(i.Name);
        }
        if(resGetData.code != 200)
        {
            await JS.InvokeVoidAsync("alert", "전기 설비 리스트 조회 실패");
            return;
        }

        if (resGetData.data == null)
        {
            ListFacility = new List<FacilityListDTO>();
        }
        else
        {
            ListFacility = resGetData.data;
        }


    }

    private void onAdd()
    {
        Navigation.NavigateTo($"/facility/{FacType}/add");
    }



}
