@using FamTec.Client.Pages.CommonComponents
@using FamTec.Client.Pages.Normal.Facility.Machine.MachineDetail.Modal
@using FamTec.Shared.Client.DTO.Normal.Facility.Maintenance
@using FamTec.Shared.Server.DTO


<div class="history yappear">
    <div class="header">
        <span class="title">
            유지보수 이력
        </span>
        <div class="options">
            @if (_editMode)
            {
                <Button Name="등록" Width=true Type="0" OnClick="OnAdd" />
                <Button Name="취소" Width=true Type="1" OnClick="OnEdit" />
                <Button Name="삭제" Width=true Type="1" OnClick="OnDelMode" />
            }else{
                <Button Name="편집" Width=true Type="0" OnClick="OnEdit" />
            }
        </div>
        

    </div>
    <div class="content">

    </div>
    <HistoryTable ListData="@ListData" FacType="@FacType" FacId="@Id" />
    @if (_isDel)
    {
        <ModalBackground>
            <ChildComponent>
                <DeleteNote  OnClick="OnDelMode"/>
            </ChildComponent>
        </ModalBackground>
    }
</div>

@code {
    [Parameter] public int Id{ get; set; }
    [Parameter] public string FacType{ get; set; }
    List<MaintenanceListDTO> ListData = new List<MaintenanceListDTO>();
    private bool _editMode = false;
    private bool _isDel = false;
    List<int?> checkedMaintenance = new List<int?>();


    protected override async Task OnInitializedAsync()
    {
        await OnLoadMaintenance();
    }

    private async Task OnLoadMaintenance()
    {
        try
        {
            ResponseList<MaintenanceListDTO> resGet = await apiManager.GetListAsync<MaintenanceListDTO>($"Maintenance/sign/GetMaintanceHistory?facilityid={Id}");
            if(resGet.code != 200)
            {
                await JS.InvokeVoidAsync("alert", resGet.message);
                return;
            }
            ListData = resGet.data;
        }
        catch (Exception ex)
        {

        }
    }

    private void OnCheck((bool isCheck, MaintenanceListDTO checkdata) data)
    {
        if (data.isCheck)
        {
            checkedMaintenance.Add(data.checkdata.ID);
        }
        else
        {
            checkedMaintenance.Remove(data.checkdata.ID);
        }
    }


    private void OnEdit()
    {
        _editMode = !_editMode;
    }

    private void OnDelMode()
    {
        _isDel = !_isDel;
    }

    private void OnAdd()
    {
        Navigation.NavigateTo($"/facility/{FacType}/{Id}/maintenance/add");
    }
}
