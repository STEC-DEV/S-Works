@inherits PermissionComponentBase
@using FamTec.Client.Pages.CommonComponents
@using FamTec.Shared.Client.Class
@using FamTec.Shared.Client.DTO.Normal.Buildings
@using System.Reflection
@using FamTec.Shared.Server.DTO
<div class="buildinginfo yappear">
    <div class="buildinginfo-header">
        <span class="title">
            건물 정보
        </span>
        @if (BASIC)
        {
            <div class="header-btns">
                @if (EditMode)
                {
                    <Button Name="저장" Width=true Type="0" OnClick="OnUpdate" />
                    <Button Name="취소" Width=true Type="1" OnClick="OnEditMode" />

                }
                else
                {
                    <Button Name="편집" Width=true Type="0" OnClick="OnEditMode" />
                }

            </div>
        }


    </div>
    <Form 
        Building=@(EditMode ? _editBuilding : Building )
        EditMode=EditMode />

</div>

@code {
    // [CascadingParameter] public BuildingDTO? Building { get; set; }
    [Parameter] public BuildingDTO? Building { get; set; }
    [Parameter] public EventCallback OnLoad { get; set; }

    private BuildingDTO _editBuilding;

    bool EditMode= false;

    protected override async Task OnInitializedAsync()
    {
        //권한 조회
        await base.OnInitializedAsync();

    }



    //편집모드 전환
    private void OnEditMode()
    {
        EditMode = !EditMode;
        _editBuilding = Building.DeepCopy();

        StateHasChanged();
    }


    //수정 
    private async Task OnUpdate()
    {
        try
        {
            Console.WriteLine("데이타 : " + _editBuilding.Name);
            ResponseUnit<bool> resUpdate = await apiManager.PutAsync<bool>("Building/sign/UpdateBuilding",_editBuilding, true);
            if(resUpdate.code != 200)
            {
                await JS.InvokeVoidAsync("alert", resUpdate.message);
            }

            await OnLoad.InvokeAsync();
            OnEditMode();

            
            StateHasChanged();
        }catch(Exception ex)
        {
            Console.WriteLine("[건물][수정] 기본정보 수정"+ ex);
            await JS.InvokeVoidAsync("alert", "[건물][수정] 기본정보 수정 실패!");
        }
    }
}
