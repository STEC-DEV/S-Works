@using FamTec.Client.Pages.CommonComponents
@using FamTec.Shared.Client.Class
@using FamTec.Shared.Client.DTO.Normal.Buildings
@using System.Reflection

@if(Building == null)
{
    <Loading/>
}
else
{
    <div class="form">
        <div class="buildinginfo-contents">
            <div class="building-img">
                @* <PreviewBox ImageUrls=@Image  /> *@
                <ImageSlider Label="대표 이미지" Images="@img" />
                @if (EditMode)
                {
                    <div class="img-btn">
                        <InputImages MaxFilesNum="1" OnChange="OnUploadImage" />
                        @if (Building.Image != null)
                        {
                            <Button Name="삭제" Width=true Type="1" OnClick="OnDelImg" />
                        }
                    </div>

                }
            </div>
            <div class="infosection-1">
                @if (EditMode)
                {
                    <InputCol Label="건물이름" Placeholder="건물이름" ValueType="text" @bind-Value=@Building.Name Required=true />
                    <InputCol Label="건물주소" Placeholder="건물주소" ValueType="text" @bind-Value=@Building.Address />
                    <InputCol Label="대표전화" Placeholder="대표전화 ( - 제외)" ValueType="number" @bind-Value=@Building.Tel />
                    <DateInput Label="준공년월" Placeholder="YYYYMMDD" @bind-Date=@Building.CompletionDT />
                    <InputCol Label="건물구조" Placeholder="건물구조" ValueType="text" @bind-Value=@Building.BuildingStruct />
                    <InputCol Label="건물용도" Placeholder="건물용도" ValueType="text" @bind-Value=@Building.Usage />
                    <InputCol Label="시공업체" Placeholder="시공업체" ValueType="text" @bind-Value=@Building.ConstCompany />
                    <InputCol Label="지붕구조" Placeholder="지붕구조" ValueType="text" @bind-Value=@Building.RoofStruct />
                    <InputCol Label="소방등급" Placeholder="소방등급" ValueType="text" @bind-Value=@Building.FireRating />
                    <InputCol Label="정화조용량" Placeholder="정화조용량" ValueType="text" @bind-Value=@Building.SeptictankCapacity />
                }
                else
                {
                    <TextField2 Label="건물이름" Color=true Value="@(Building?.Name  ?? "없음")" />
                    <TextField2 Label="건물주소" Color=true Value="@(Building?.Address  ?? "없음")" />
                    <TextField2 Label="대표전화" Color=true Value="@(Building?.Tel  ?? "없음")" />
                    <TextField2 Label="준공년월" Color=true Value="@(Building?.CompletionDT?.ToString("yyyy-MM-dd")  ?? "없음")" />
                    <TextField2 Label="건물구조" Color=true Value="@(Building?.BuildingStruct  ?? "없음")" />
                    <TextField2 Label="건물용도" Color=true Value="@(Building?.Usage  ?? "없음")" />
                    <TextField2 Label="시공업체" Color=true Value="@(Building?.ConstCompany  ?? "없음")" />
                    <TextField2 Label="지붕구조" Color=true Value="@(Building?.RoofStruct  ?? "없음")" />
                    <TextField2 Label="소방등급" Color=true Value="@(Building?.FireRating  ?? "없음")" />
                    <TextField2 Label="정화조용량" Color=true Value="@(Building?.SeptictankCapacity  ?? "없음")" />


                }

            </div>
        </div>
        <div class="infosection-2">
            <GroupField Title="면적"
                        Sub1="연면적"
                        Sub2="대지면적"
                        Sub3="건축면적"
                        Unit="㎡"
                        @bind-Data1="@Building.GrossFloorArea"
                        @bind-Data2="@Building.LandArea"
                        @bind-Data3="@Building.BuildingArea"
                        EditMode=EditMode />
            <GroupField Title="건물층수" Sub1="전체" Sub2="지상" Sub3="지하" Unit="층"
                        @bind-Data1="@Building.FloorNum"
                        @bind-Data2="@Building.GroundFloorNum"
                        @bind-Data3="@Building.BasementFloorNum"
                        EditMode=EditMode />
            <GroupField Title="건물높이" Sub1="전체" Sub2="지상" Sub3="지하" Unit="M"
                        @bind-Data1="@Building.BuildingHeight"
                        @bind-Data2="@Building.GroundHeight"
                        @bind-Data3="@Building.BasementHeight"
                        EditMode=EditMode />

            <GroupField Title="주차" Sub1="전체" Sub2="옥내" Sub3="옥외" Unit="대"
                        @bind-Data1="@Building.ParkingNum"
                        @bind-Data2="@Building.InnerParkingNum"
                        @bind-Data3="@Building.OuterParkingNum"
                        EditMode=EditMode />
            <GroupField Title="전기용량" Sub1="전체" Sub2="수전" Sub3="발전" Unit="kw"
                        @bind-Data1="@Building.ElecCapacity"
                        @bind-Data2="@Building.FaucetCapacity"
                        @bind-Data3="@Building.GenerationCapacity"
                        EditMode=EditMode />

            <GroupField Title="급수용량" Sub1="전체" Sub2="고가수조" Sub3="저수조" Unit="Ton"
                        @bind-Data1="@Building.WaterCapacity"
                        @bind-Data2="@Building.ElevWaterCapacity"
                        @bind-Data3="@Building.WaterTank"
                        EditMode=EditMode />
            <GroupField Title="가스용량" Sub1="전체" Sub2="보일러" Sub3="냉온수기" Unit="N㎥"
                        @bind-Data1="@Building.GasCapacity"
                        @bind-Data2="@Building.Boiler"
                        @bind-Data3="@Building.WaterDispenser"
                        EditMode=EditMode />
            <GroupField Title="승강기" Sub1="전체" Sub2="인승용" Sub3="화물용" Unit="대"
                        @bind-Data1="@Building.LiftNum"
                        @bind-Data2="@Building.PeopleLiftNum"
                        @bind-Data3="@Building.CargoLiftNum"
                        EditMode=EditMode />
            <GroupField Title="냉난방용량" Sub1="전체" Sub2="난방용량" Sub3="냉방용량" Unit="kcal/h"
                        @bind-Data1="@Building.CoolHeatCapacity"
                        @bind-Data2="@Building.HeatCapacity"
                        @bind-Data3="@Building.CoolCapacity"
                        EditMode=EditMode />
            <GroupField Title="조경면적" Sub1="전체" Sub2="지상" Sub3="옥상" Unit="㎡"
                        @bind-Data1="@Building.LandScapeArea"
                        @bind-Data2="@Building.GroundArea"
                        @bind-Data3="@Building.RooftopArea"
                        EditMode=EditMode />
            <GroupField Title="화장실" Sub1="전체" Sub2="남자" Sub3="여자" Unit="개소"
                        @bind-Data1="@Building.ToiletNum"
                        @bind-Data2="@Building.MenToiletNum"
                        @bind-Data3="@Building.WomenToiletNum"
                        EditMode=EditMode />
        </div>
    </div>
}



@code {
    [Parameter] public BuildingDTO? Building { get; set; }
    [Parameter] public bool EditMode{ get; set; }
    // [Parameter] public List<string> Image {get;set;}

    List<byte[]> img = new List<byte[]>();


    protected override async Task OnParametersSetAsync()
    {
        if (Building != null && Building.Image != null)
        {
            await ImgConvert();
        }
        
    }

    private async Task ImgConvert()
    {
        img.Clear();
        if (Building.Image != null && 
            !string.IsNullOrEmpty(Building.ImageName) 
            && !img.Any(i => i.SequenceEqual(Building.Image))
        )
        {
            img.Add(Building.Image);
        }
    }

    private async void OnUploadImage(List<ImageFile> images)
    {
        List<byte[]> temp = new List<byte[]>();
        List<string> names = new List<string>();

        foreach(var image in images)
        {
            temp.Add(image.Image);
            names.Add(image.Name);
        }
        if(img.Count == 0)
        {
            Console.WriteLine("신규");
            img.Add(temp[0]);
        }
        else
        { 
            Console.WriteLine("추가");
            img[0] = temp[0];
        }

        Building.Image = temp[0];
        Building.ImageName = names[0];


        StateHasChanged();
    }

    private void OnDelImg()
    {
        Building.Image = null;
        Building.ImageName = null;
        img.Clear();
        StateHasChanged();
    }



    // private void OnEditMode()
    // {
    //     EditMode = !EditMode;
    //     StateHasChanged();
    // }
}
