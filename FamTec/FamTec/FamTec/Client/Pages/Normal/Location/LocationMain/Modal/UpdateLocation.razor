@using FamTec.Client.Pages.CommonComponents
@using FamTec.Shared.Client.DTO.Normal.Location
@using FamTec.Shared.Server.DTO

<div class="modal">
    <div class="header">
        <span class="title">
            위치 수정
        </span>
    </div>
    <div class="content">
        <TextField2 Label="현재 명칭" Color=true Value="@LocationName"/>
        <InputCol
            Label="수정 명칭"
            @bind-Value=updateLocation.Name
            Placeholder="수정 명칭"
            />
    </div>
    <div class="btns">
        <Button Name="저장" Type="0" OnClick="OnUpdateRoom" />
        <Button Name="취소" Type="1" OnClick="OnClosed" />
    </div>
</div>

@code {
    [Parameter] public string LocationName { get; set; }
    [Parameter] public int LocationId { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public EventCallback OnLoad { get; set; }

    UpdateRoomDTO updateLocation = new UpdateRoomDTO();


    private async Task OnUpdateRoom()
    {
        try
        {
            if (LocationName == updateLocation.Name)
            {
                await JS.InvokeVoidAsync("alert", "변경 사항이 존재하지 않습니다.");
                OnClosed();
                return;
            }
            updateLocation.RoomId = LocationId;
            ResponseUnit<bool> resUpdate = await apiManager.PutAsync<bool>("Room/sign/UpdateRoom", updateLocation);
            if(resUpdate.code != 200)
            {
                await JS.InvokeVoidAsync("alert", resUpdate.message);
                OnClosed();
                return;
            }
            await OnLoad.InvokeAsync();
            OnClosed();
        }catch(Exception ex)
        {
            Console.WriteLine(ex);
            await JS.InvokeVoidAsync("alert", "저장 실패");
        }
    }


    private async void OnClosed()
    {
        await OnClose.InvokeAsync();
    }

}
