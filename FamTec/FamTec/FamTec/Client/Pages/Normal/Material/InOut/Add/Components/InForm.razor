@using FamTec.Client.Pages.CommonComponents
@using FamTec.Client.Pages.Normal.Location.LocationMain.Components
@using FamTec.Shared.Client.DTO.Normal.Location
@using FamTec.Shared.Server.DTO


<div class="inform">
    <div class="header">
        <span class="title">
            입고 내용
        </span>
    </div>
    <div class="content">
        <InputCol Label="날짜" Placeholder="날짜" Row="true"  Value="@moc"/>
        
        <SelectField 
            T="BuildingFloorListDTO" 
            Key="building" 
            SelectData="Locations" 
            Value="SelectedBuildingId" 
            OnChange="OnBuildingChange" 
            Label="건물"
            Row="true"
            EditMode="true" />
        @if (SelectedBuilding != null && SelectedBuilding.FloorList.Any())
        {
            <SelectField  
                Key="floor" 
                SelectData="SelectedBuilding.FloorList" 
                Value="SelectedFloorId" 
                Label="위치"
                Row="true"
                OnChange="OnFloorChange" 
                EditMode="true" />
        }
        
        <InputCol Label="수량" Placeholder="수량" Row="true" Value="@moc" />
        <InputCol Label="비고" Placeholder="비고" Row="true" Value="@moc" />
    </div>
</div>

@code {
    List<BuildingFloorListDTO> Locations = new List<BuildingFloorListDTO>();
    BuildingFloorListDTO SelectedBuilding;
    int SelectedBuildingId;
    int SelectedFloorId;

    string moc = "";


    protected override async Task OnInitializedAsync()
    {
        await OnLoadLocation();
    }

    private async Task OnLoadLocation()
    {
        try
        {
            ResponseList<BuildingFloorListDTO> resGet = await apiManager.GetListAsync<BuildingFloorListDTO>("Building/sign/PlaceBuildingList");
            if (resGet.code != 200)
            {
                await JS.InvokeVoidAsync("alert", "위치 정보 조회 실패");
                return;
            }
            Locations = resGet.data;


        }
        catch (Exception ex)
        {

        }
    }

    //건물선택
    private void OnBuildingChange(int buildingId)
    {
        SelectedBuildingId = buildingId;

        SelectedBuilding = Locations.FirstOrDefault(b => b.Id == buildingId);
        SelectedFloorId = 0; // Reset floor selection when building changes
        StateHasChanged();
    }

    //위치 선택
    private void OnFloorChange(int floorId)
    {
        SelectedFloorId = floorId;
        
    }

}
