@using FamTec.Client.Pages.CommonComponents
@using FamTec.Shared.Client.DTO.Normal.Location.Inventory
@using FamTec.Shared.Client.DTO.Normal.Material.Detail


<table class="table">
    <thead class="thead">
        
        <tr class="th-tr">
            <th class="th">
                <span>
                    거래일
                </span>
            </th>
            <th class="th">
                <span>
                    품목 코드
                </span>
            </th>
            <th class="th">
                <span>
                    품목명
                </span>
            </th>
            <th class="th">
                <span>
                    단위
                </span>
            </th>
            <th class="th">
                <span>
                    입고 수량
                </span>
            </th>
            <th class="th">
                <span>
                    입고 단가
                </span>
            </th>
            <th class="th">
                <span>
                    입고 금액
                </span>
            </th>
            <th class="th">
                <span>
                    출고 수량
                </span>
            </th>
            <th class="th">
                <span>
                    출고 단가
                </span>
            </th>
            <th class="th">
                <span>
                    출고 금액
                </span>
            </th>
            <th class="th">
                <span>
                    재고 수량
                </span>
            </th>
            <th class="th">
                <span>
                    비고
                </span>
            </th>
        </tr>
    </thead>
    <tbody class="tbody">
        @if (ListData.Count == 0 || ListData is null)
        {
            <tr>
                <td colspan="100" style="text-align:center;">
                    <Empty />
                </td>
            </tr>
        }
        else
        {
            @foreach (var row in ListData)
            {
                <tr class="tr">
                    <td class="td">
                        @row.INOUT_DATE
                    </td>
                    <td class="td">
                        @row.Code
                    </td>
                    <td class="td">
                        @row.Name
                    </td>
                    <td class="td">
                        @row.MaterialUnit
                    </td>
                    <td class="td">
                        @(row.Type == 1 ? row.InOutNum : 0)
                    </td>
                    <td class="td">
                        @(row.Type == 1 ? row.InOutUnitPrice : 0)
                    </td>
                    <td class="td">
                        @(row.Type == 1 ? row.InOutTotalPrice : 0)
                    </td>
                    <td class="td">
                        @(row.Type == 0 ? row.InOutNum : 0)
                    </td>
                    <td class="td">
                        @(row.Type == 0 ? row.InOutUnitPrice : 0)
                    </td>
                    <td class="td">
                        @(row.Type == 0 ? row.InOutTotalPrice : 0)
                    </td>
                    <td class="td">
                        @row.CurrentNum
                    </td>
                    <td class="td">
                        @* @row.Note *@
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#223377" class="bi bi-link-45deg" viewBox="0 0 16 16">
                            <path d="M4.715 6.542 3.343 7.914a3 3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.002 1.002 0 0 0-.154.199 2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z" />
                            <path d="M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12 3.55a2 2 0 1 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 1 0-4.243-4.243L6.586 4.672z" />
                        </svg>
                    </td>
                    
                </tr>
            }
        }
        
    </tbody>
    <tfoot class="tfoot">
        <tr class="tfoot-tr">
            <td class="tf-td" colspan="4">소계</td>
            <td class="tf-td">@totalInQty</td>
            <td class="tf-td">@totalInPrice</td>
            <td class="tf-td">@totalInAmount</td>
            <td class="tf-td">@totalOutQty</td>
            <td class="tf-td">@totalOutPrice</td>
            <td class="tf-td">@totalOutAmount</td>
            <td class="tf-td">@totalCurrentNum</td>
            <td class="tf-td"></td>
        </tr>
    </tfoot>
</table>

@code {
    [Parameter] public List<InventoryRecordDTO> ListData { get; set; }

    private int? totalInQty = 0;
    private float? totalInPrice = 0;
    private float? totalInAmount = 0;
    private int? totalOutQty = 0;
    private float? totalOutPrice = 0;
    private float? totalOutAmount = 0;
    private int? totalCurrentNum = 0;

    protected override async Task OnParametersSetAsync()
    {
        CalculateTotals();
    }

    private void CalculateTotals()
    {
        totalInQty = ListData.Where(row => row.Type == 1).Sum(row => row.InOutNum);
        totalInPrice = ListData.Where(row => row.Type == 1).Sum(row => row.InOutUnitPrice);
        totalInAmount = ListData.Where(row => row.Type == 1).Sum(row => row.InOutTotalPrice);

        totalOutQty = ListData.Where(row => row.Type == 0).Sum(row => row.InOutNum);
        totalOutPrice = ListData.Where(row => row.Type == 0).Sum(row => row.InOutUnitPrice);
        totalOutAmount = ListData.Where(row => row.Type == 0).Sum(row => row.InOutTotalPrice);

        totalCurrentNum = ListData.Sum(row => row.CurrentNum);
    }
}
