@inherits PermissionComponentBase
@using FamTec.Client.Pages.CommonComponents
@using FamTec.Shared.Client.DTO.Normal.Unit

<table class="table">
    <thead class="thead">
        <tr class="th-tr">
            <th class="th">
                <span>
                    구분
                </span>
            </th>
            <th class="th">
                <span>
                    단위
                </span>
            </th>
            @if (BASIC)
            {
                <th class="th">
                    <span>

                    </span>
                </th>
            }
            
        </tr>
    </thead>
    <tbody class="tbody">
        @if(ListData.Count == 0)
        {
            <tr>
                <td colspan="100" style="text-align:center;">
                    <Empty />
                </td>
            </tr>
        }
        else
        {
            @foreach (var unit in ListData.Select((value, idx) => (value, idx)))
            {
                <tr class="tbody-tr">
                    @* <td class="td text-left">
            @(unit.idx+1)
            </td> *@
                    <td class="td">
                        @(unit.value.SystemCreate ? "시스템" : "사용자 정의")
                    </td>
                    <td class="td">
                        @unit.value.Unit
                    </td>
                    @if (BASIC)
                    {
                        <td class="td ">
                            @if (!unit.value.SystemCreate)
                            {
                                <input type="checkbox" @onchange="(e)=>OnChecked(e, unit.value.Id)" />
                            }
                        </td>
                    }

                </tr>
            }
        }
        

    </tbody>
</table>

@code {
    [Parameter] public List<UnitDTO> ListData { get; set; }
    [Parameter] public EventCallback<(bool,int)> OnCheck { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }


    private async void OnChecked(ChangeEventArgs e, int id)
    {
        await OnCheck.InvokeAsync(((bool)e.Value, id));
    }
}
