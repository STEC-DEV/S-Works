@inherits PermissionComponentBase
@using System.ComponentModel.DataAnnotations
@using System.Reflection
@using FamTec.Client.Pages.CommonComponents
@typeparam T

<table class="table">
    <thead class="thead">
        <tr class="tr">
            <th class="th">
                <span>
                    사용자
                </span>
            </th>
            <th class="th text-center">
                <span>
                    부서
                </span>
            </th>
            <th class="th">
                <span>
                    이메일
                </span>
            </th>
            <th class="th">
                <span>
                    생성 일자
                </span>
            </th>
            <th class="th text-center">
                <span>
                    상태
                </span>
            </th>
            @if (USEREDIT)
            {
                <th class="th table-select"></th>
            }
            

        </tr>
    </thead>
    <tbody class="tbody">
       
            @if(Data == null)
            {
            <tr>
                <td colspan="100" style="text-align:center; height:100%;">
                    <Loading />
                </td>

            </tr>
            }
            else if (Data.Count == 0)
            {
            <tr>
                <td colspan="100" style="text-align:center; height:100%;">
                    <Empty />
                </td>

            </tr>
            }
            else
            {
                @foreach (var row in Data)
                {
                string id = typeof(T).GetProperty("Id")?.GetValue(row)?.ToString();

                <tr class="tbody-tr">
                    <td class="td userinfo" @onclick="()=>OnDetail(id)">
                        @* <img class="table-img" alt=""/> *@
                        <div class="title-wrap">
                            <a class="maintitle">
                                @typeof(T).GetProperty("Name")?.GetValue(row)?.ToString()
                            </a>
                            <span class="subtitle italic">
                                @typeof(T).GetProperty("UserId")?.GetValue(row)?.ToString()
                            </span>
                        </div>
                        
                    </td>
                    <td class="td text-center" @onclick="()=>OnDetail(id)">
                        <span class="subtitle">
                            @typeof(T).GetProperty("Type")?.GetValue(row)?.ToString()
                        </span>
                    </td>
                    <td class="td" @onclick="()=>OnDetail(id)">
                        <span class="subtitle">
                            @typeof(T).GetProperty("Email")?.GetValue(row)?.ToString()
                        </span>
                    </td>
                    <td class="td" @onclick="()=>OnDetail(id)">
                        <span class="subtitle">
                            @typeof(T).GetProperty("Created")?.GetValue(row)?.ToString()
                        </span>
                    </td>
                    <td class="td text-center" @onclick="()=>OnDetail(id)">
                        <span class="subtitle">
                            <StatusCard Status=@typeof(T).GetProperty("Status")?.GetValue(row)?.ToString() />
                           
                            
                        </span>
                    </td>
                    @if (USEREDIT)
                    {
                        <td class="td text-center">
                            <input type="checkbox" checked="@CheckItems.Contains(int.Parse(id))" @onchange="e=> OnSelect(e, int.Parse(id))" />
                        </td>
                    }
                    

                 </tr>
                }
        }
        
    </tbody>
</table>

@code {
    [Parameter] public bool EditMode { get; set; }
    [Parameter] public List<T>? Data { get; set; }
    [Parameter] public HashSet<int> Checkitem { get; set; }
    [Parameter] public EventCallback<(bool, int)> Select { get; set; }
    private HashSet<int> CheckItems = new HashSet<int>();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    private void OnDetail(string id)
    {
        Navigation.NavigateTo($"/users/{id}");
    }

    private async Task OnSelect(ChangeEventArgs e, int id)
    {
        bool isChecked = (bool)(e.Value ?? false);
        if (isChecked)
        {
            CheckItems.Add(id);
        }
        await Select.InvokeAsync((isChecked, id));
    }
}
