@page "/users"
@inherits PermissionComponentBase
@using FamTec.Client.Pages.CommonComponents
@using FamTec.Shared.Client.DTO.Normal.Users
@using FamTec.Client.Pages.Normal.User.UserMain.Components
@using FamTec.Shared.Server.DTO
@inject NavigationManager Navigation

<div class="user-container yappear">
    <div class="user-wrap">
        <div class="user-title">
            <span class="title">
                사용자 목록
            </span>
            @if (USEREDIT)
            {
                <div class="user-options">
                    <Input Placeholder="search" Type="text" ValueChanged="OnSearchData" />
                    <Button Name="추가" Width=true OnClick=AddUser Type=0 />
                    <Button Name="삭제" Width=true Type=1 />
                </div>
            }
            
        </div>
        <div class="user-content">
            <UserTable Data=@FilterData Checkitem="@CheckItems" Select="@OnSelected" />
        </div>
    </div>
</div>

@code {
    private string SearchText = string.Empty;

    List<ListUser> usersData;
    List<ListUser> FilterData;
    HashSet<int> CheckItems = new HashSet<int>();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await OnLoadTsetData();
    }


    /*
    * 사용자 추가화면 이동
    */
    private void AddUser()
    {
        Navigation.NavigateTo("/users/add");
    }


    private async Task OnLoadTsetData()
    {
        ResponseList<ListUser> resUsers = await apiManager.GetListAsync<ListUser>("user/sign/GetPlaceUsers");
        if(object.ReferenceEquals(null,resUsers) || resUsers.code != 200)
        {
            await JS.InvokeVoidAsync("alert", "사용자 목록 조회 실패");
            return;
        }
        usersData = resUsers.data;
        FilterData = usersData;

    }

    private void OnSearchData(string searchText)
    {
        SearchText = searchText;
        FilterData = string.IsNullOrEmpty(SearchText)
            ? usersData
            : usersData.Where( p => p.Name.Contains(SearchText, StringComparison.OrdinalIgnoreCase) ||
                                    p.UserId.Contains(SearchText, StringComparison.OrdinalIgnoreCase) ||
                                    p.Type.Contains(SearchText, StringComparison.OrdinalIgnoreCase)
                                ).ToList();
    }

    /*
    * 사업장 체크
    */
    public void OnSelected((bool isCheck, int id) selection)
    {
        if (!selection.isCheck)
        {
            CheckItems.Remove(selection.id);
        }
        else
        {
            CheckItems.Add(selection.id);
        }
        foreach (var i in CheckItems)
        {
            Console.WriteLine("check" + i);
        }

    }


}
