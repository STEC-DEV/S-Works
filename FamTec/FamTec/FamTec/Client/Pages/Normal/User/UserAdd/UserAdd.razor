@page "/users/add"
@using FamTec.Client.Pages.Normal.User.UserAdd.Components
@using FamTec.Client.Pages.CommonComponents
@using FamTec.Shared.Client.DTO.Normal.Users
@using FamTec.Shared.Server.DTO

<div class="useradd-container">
    <div class="useradd-wrap">
        <div class="useradd-info">
            <SignForm UserInfo="@User.UserInfo" EditMode=@EditMode />
        </div>
        <div class="useradd-perm">
            <UserPermComponent UserPerm="@User.UserPerm" OnVocActive="@OnVocActive" />
        </div>
        @if (isVocPerm)
        {
            <div class="useradd-sub yappear">
                <UserVocPermComponent UserVocPerm="@User.UserVocPerm" />
            </div>
        }
    </div>
    <div class="useradd-btns">
        <Button Name="등록" Width=true Type=0 OnClick="@OnAdd" />
        <Button Name="취소" Width=true Type=1 OnClick="@OnCancle" />
    </div>
</div>

@code {
    bool isVocPerm = false;
    bool EditMode = true;
    UserDTO User;
    UserTbDTO Users;

    protected override Task OnInitializedAsync()
    {
        User = new UserDTO()
        {
            UserInfo = new UserInfoDTO(),
            UserPerm = new UserPermDTO(),
            UserVocPerm = new UserVocPermDTO(),
        };
        Users = new UserTbDTO();
        return base.OnInitializedAsync();
    }



    private void OnVocActive(UserPermDTO updatedPerm)
    {
        Console.WriteLine("ㅁㄴㅇ");
        // User.UserPerm = updatedPerm;
        isVocPerm = !isVocPerm;
        StateHasChanged();
    }

    private async void OnAdd()
    {
        Console.WriteLine(User.UserInfo.Name);
        Console.WriteLine(User.UserInfo.UserId);
        Console.WriteLine(User.UserInfo.Phone);
        Console.WriteLine(User.UserInfo.Password);
        Console.WriteLine(User.UserInfo.Email);
        Console.WriteLine("기본" + User.UserPerm.BasicPerm);
        Console.WriteLine("기계" + User.UserPerm.MachinPerm);
        Console.WriteLine("전기" + User.UserPerm.ElecPerm);
        Console.WriteLine("승강" + User.UserPerm.LiftPerm);
        Console.WriteLine("소방" + User.UserPerm.FirePerm);
        Console.WriteLine("건축" + User.UserPerm.ConstructPerm);
        Console.WriteLine("통신" + User.UserPerm.NetworkPerm);
        Console.WriteLine("미하" + User.UserPerm.BeautyPerm);
        Console.WriteLine("보안" + User.UserPerm.SecurityPerm);
        Console.WriteLine("자재" + User.UserPerm.MaterialPerm);
        Console.WriteLine("에너지" + User.UserPerm.EnergyPerm);
        Console.WriteLine("사용자" + User.UserPerm.UserPerm);
        Console.WriteLine("민원" + User.UserPerm.VocPerm);
        Console.WriteLine("민기" + User.UserVocPerm.MachineVoc);
        Console.WriteLine("민건" + User.UserVocPerm.ConstructVoc);
        Console.WriteLine("민통" + User.UserVocPerm.NetworkVoc);
        Console.WriteLine("민보" + User.UserVocPerm.SecurityVoc);
        Console.WriteLine("img" + User.UserInfo.Image);
        Console.WriteLine("img" + User.UserInfo.ImageName);

        await OnConvert();
        ResponseUnit<UserDTO> resAdd = await apiManager.PostWithFilesAsync<UserDTO>("User/sign/AddUser", Users);
        if(resAdd.code != 200)
        {
            await JS.InvokeVoidAsync("alert", "사용자 생성 실패");
            User = new UserDTO();
            return;
        }


        User = new UserDTO();
        Navigation.NavigateTo("/users");
    }

    private async void OnCancle()
    {
        User = new UserDTO();
        Navigation.NavigateTo("/users");
    }

    private async Task OnConvert()
    {
        Users.USERID = User.UserInfo.UserId;
        Users.NAME = User.UserInfo.Name;
        Users.JOB= User.UserInfo.Job;
        Users.PHONE = User.UserInfo.Phone;
        Users.EMAIL = User.UserInfo.Email;
        Users.Image = User.UserInfo.Image;
        Users.ImageUrl= User.UserInfo.ImageName;
        Users.USERID = User.UserInfo.UserId;
        Users.STATUS = User.UserInfo.Status;
        Users.ALRAM_YN = User.UserInfo.AlarmYN;
        Users.PERM_BASIC = User.UserPerm.BasicPerm;
        Users.PERM_MACHINE = User.UserPerm.MachinPerm;
        Users.PERM_ELEC = User.UserPerm.ElecPerm;
        Users.PERM_LIFT = User.UserPerm.LiftPerm;
        Users.PERM_FIRE = User.UserPerm.FirePerm;
        Users.PERM_CONSTRUCT = User.UserPerm.ConstructPerm;
        Users.PERM_NETWORK = User.UserPerm.NetworkPerm;
        Users.PERM_MATERIAL = User.UserPerm.MaterialPerm;
        Users.PERM_ENERGY = User.UserPerm.EnergyPerm;
        Users.PERM_USER = User.UserPerm.UserPerm;
        Users.PERM_VOC = User.UserPerm.VocPerm;
        Users.VOC_MACHINE = User.UserVocPerm.MachineVoc;
        Users.VOC_ELEC = User.UserVocPerm.ElecVoc;
        Users.VOC_LIFT = User.UserVocPerm.LiftVoc;
        Users.VOC_FIRE = User.UserVocPerm.FireVoc;
        Users.VOC_CONSTRUCT = User.UserVocPerm.ConstructVoc;
        Users.VOC_NETWORK = User.UserVocPerm.NetworkVoc;
        Users.VOC_BEAUTY = User.UserVocPerm.BeautyVoc;
        Users.VOC_SECURITY = User.UserVocPerm.SecurityVoc;
        Users.VOC_ETC = User.UserVocPerm.ETCVoc;
    }
}
