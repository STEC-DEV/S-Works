@using FamTec.Client.Pages.Admin.Place.PlaceAdd.Components
@using FamTec.Client.Pages.CommonComponents
@using FamTec.Shared.Client.DTO
@using FamTec.Shared.Server.DTO


<div class="modal">
    <div class="header">
        <span class="title">
            매니저 목록
        </span>
    </div>
    <Input
        Placeholder="매니저명, 그룹명"
        Value="@_searchText"
        Padding=true
        ValueChanged="OnSearch"
        />
    <div class="content">
        <ManagerTable 
            ListData="@FilterData" 
            CheckedItem="@checkManager" 
            OnChecked="@OnChecked"
            />
    </div>
    <div class="btns">
        <Button Name="추가" Type="0" OnClick="@OnAdd" />
        <Button Name="취소" Type="1" OnClick="@OnCanceled"/>
    </div>
    
</div>

@code {
    [Parameter] public List<ManagerDTO>? SelectManagerList { get; set; }
    //취소 이벤트
    [Parameter] public EventCallback OnCancel { get; set; }
    //매니저추가 이벤트
    [Parameter] public EventCallback<List<ManagerDTO>> OnAddManager { get; set; }

    //최초 전체 매니저 목록
    List<ManagerDTO> ListManager = new List<ManagerDTO>();

    //검색 목록
    List<ManagerDTO> FilterData = new List<ManagerDTO>();

    //체크된 데이터 목록
    List<ManagerDTO> CheckedManagerList = new List<ManagerDTO>();
    List<int> checkManager = new List<int>();
    string _searchText = "";
    //이니셜
    protected override async Task OnInitializedAsync()
    {
        await OnLoadManagerList();
    }


    private async Task OnAdd()
    {
        if (CheckedManagerList.Count == 0)
        {
            await JS.InvokeVoidAsync("alert", "선택된 매니저가 존재하지않습니다.");
            return;
        }

        // 선택된 매니저들을 기존 SelectManagerList에 추가
        foreach (var manager in CheckedManagerList)
        {
            if (!SelectManagerList.Any(m => m.Id == manager.Id))
            {
                SelectManagerList.Add(manager);
            }
        }

        // 업데이트된 SelectManagerList를 부모 컴포넌트에 전달
        await OnAddManager.InvokeAsync(SelectManagerList);

        // 모달 닫기
        OnCanceled();
    }

    //매니저 로드
    private async Task OnLoadManagerList()
    {
        ResponseList<ManagerDTO> res = await apiManager.GetListAsync<ManagerDTO>("AdminPlace/sign/GetAllManagerList");
        if (res.code != 200)
        {
            await JS.InvokeVoidAsync("alert", res.message);
            return;
        }
        ListManager = res.data;
        FilterData = ListManager.Where(m => !SelectManagerList.Any(s => s.Id == m.Id)).ToList();
    }

    //매니저 필터링
    private async Task OnSearch(string text)
    {
        _searchText = text;
        FilterData = ListManager
        .Where(m => !SelectManagerList.Any(s => s.Id == m.Id)) // 선택된 객체 제외
        .Where(m => String.IsNullOrEmpty(_searchText) ||
                    (m.Name?.Contains(_searchText, StringComparison.OrdinalIgnoreCase) ?? false) ||
                    (m.UserId?.Contains(_searchText, StringComparison.OrdinalIgnoreCase) ?? false) ||
                    (m.Department?.Contains(_searchText, StringComparison.OrdinalIgnoreCase) ?? false))
        .ToList();  

        await InvokeAsync(StateHasChanged);
    

        // FilterData = String.IsNullOrEmpty(_searchText)
        //                            ? ListManager.Where(m => !SelectManagerList.Any(s => s.Id == m.Id)).ToList()
        //                        : ListManager.Where(m => (m.Name?.Contains(_searchText, StringComparison.OrdinalIgnoreCase) ?? false) ||
        //                                                    (m.UserId?.Contains(_searchText, StringComparison.OrdinalIgnoreCase) ?? false) ||
        //                                                    (m.Department?.Contains(_searchText, StringComparison.OrdinalIgnoreCase) ?? false)
        //                                                    ).ToList();
    }


    //체크 매니저
    private void OnChecked((bool isCheck, ManagerDTO manager)data)
    {
        //매니저 추가
        if (data.isCheck)
        {
            checkManager.Add(data.manager.Id);
            CheckedManagerList.Add(data.manager);
        }
        //매니저 삭제
        else
        {
            checkManager.Remove(data.manager.Id);
            CheckedManagerList.Remove(data.manager);
        }
    }

    //모달 취소
    private void OnCanceled()
    {
        OnCancel.InvokeAsync();
    }
}
