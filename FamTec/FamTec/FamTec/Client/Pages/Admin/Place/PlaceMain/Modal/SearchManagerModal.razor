@using FamTec.Client.Pages.Admin.CommonComponents
@using FamTec.Shared.Client.DTO
@using FamTec.Shared.Server
@using FamTec.Shared.Server.DTO
@inject HttpClient HttpClient

<div class="addmanager-modal-container yappear">
    <div class="addmanager-modal-wrap">
        <div class="addmanager-modal-title">
            매니저 조회
        </div>
        <Input Placeholder="search" ValueChanged="OnSearchTextChanged" />
        <div class="addmanager-modal-item">
            <Table DataList="FilterManagerList" ReturnType="object" SelectItem="OnSelectedItem" />
        </div>
        <div class="addmanager-modal-btns">
            <Button Name="확인" OnClick="OnConfirm" />
        </div>

    </div>
    
</div>


@code {
    [Parameter] public string Title { get; set; }
    [Parameter] public string Content { get; set; }
    [Parameter] public List<ManagerDTO> AddManagerList { get; set; }
    [Parameter] public EventCallback<bool> OnClose { get; set; }
    [Parameter] public EventCallback<List<ManagerDTO>> OnAddManagerListChanged { get; set; }

    List<ManagerDTO> ManagerList;
    List<object> placeManagerList;
    List<string> properties;


    //검색 변수
    List<ManagerDTO> FilterManagerList = new List<ManagerDTO>();
    string searchText = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        /*
        * 현재 매니저 목록 조회 Fetch Get
        */
        // ResponseObj<ManagerDTO> res = await HttpClient.GetFromJsonAsync<ResponseObj<ManagerDTO>>("http://123.2.156.148:5245/api/AdminPlace/GetAllManagerList");
        await OnLoadManagerList();



    }

    private async Task OnLoadManagerList()
    {
        ResponseList<ManagerDTO> res = await apiManager.GetListAsync<ManagerDTO>("AdminPlace/sign/GetAllManagerList");
        if(res.code != 200)
        {
            await JS.InvokeVoidAsync("alert", "매니저 조회 실패");
            return;
        }
        ManagerList = res.data;
        FilterManagerList = ManagerList;
    }

    private Task ModalClose(){
        return OnClose.InvokeAsync(false);
    }

    private async Task OnSelectedItem((bool isSelected, object item) selection)
    {
        var managerItem = selection.item as ManagerDTO;

        if(managerItem != null)
        {
            if (selection.isSelected)
            {
                if(!AddManagerList.Any(m => m.Id == managerItem.Id))
                {
                    AddManagerList.Add(managerItem);
                }
            }
            else
            {
                AddManagerList.Remove(managerItem);
            }
        }
        
    }

     /*
     * 검색 데이터 필터링
    */
    private void OnSearchTextChanged(string text)
    {
        // searchText = e.Value.ToString();
        searchText = text;
        FilterManagerList = string.IsNullOrEmpty(searchText)
            ? ManagerList
            : ManagerList.Where(p => p.Name.Contains(searchText, StringComparison.OrdinalIgnoreCase) ||
                                   p.UserId.Contains(searchText, StringComparison.OrdinalIgnoreCase) ||
                                   p.Department.Contains(searchText, StringComparison.OrdinalIgnoreCase))
                        .ToList();
    }

    private async Task OnConfirm()
    {
        await OnAddManagerListChanged.InvokeAsync(AddManagerList);
        await OnClose.InvokeAsync(false);
    }
}
