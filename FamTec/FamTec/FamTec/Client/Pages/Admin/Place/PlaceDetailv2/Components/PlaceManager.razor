@using FamTec.Client.Pages.Admin.Place.PlaceDetailv2.Modal
@using FamTec.Client.Pages.CommonComponents
@using FamTec.Shared.Client.DTO
@using FamTec.Shared.Client.DTO.Place
@using FamTec.Shared.Server.DTO
@inherits PermissionComponentBase

<div class="manager yappear">
    <div class="header">
        <span class="title">
            사업장 관리자
        </span>
        <div class="options">
            @if (ADMINEDIT)
            {
                @if (EditMode)
                {
                    <Button Name="추가" Width=true Type="0" OnClick="OnModal" />
                    @if (_selectDelList.Count > 0)
                    {
                        <Button Name="삭제" Width=true Type="1" OnClick="OnDelManager" />
                    }
                }
            }
            
        </div>
    </div>
    <div class="content">
        <ManagerTable 
            ListData="@SelectList" 
            OnChecked="OnChecked"
            EditMode=EditMode
            CheckedItem="@_selectDelList"
            />
    </div>
    @if (_isModal && EditMode)
    {
        <ModalBackground>
            <ChildComponent>
                <ManagerModal 
                    SelectManagerList="@SelectList" 
                    OnCancel="OnModal" 
                    OnAddManager="OnSelected"
                    Id=@Id
                    />
            </ChildComponent>
        </ModalBackground>
    }
</div>

@code {
    [Parameter] public List<ManagerDTO> SelectList { get; set; }
    [Parameter] public bool EditMode{ get; set; }
    [Parameter] public EventCallback<List<ManagerDTO>> OnSelect{ get; set; }
    [Parameter] public int Id { get; set; }
    [Parameter] public EventCallback OnLoadManager{ get; set; }

    // private bool _editmode = false;
    private bool _isModal = false;
    private List<ManagerDTO> _selectDelList = new List<ManagerDTO>();
    private DeletePlaceManagerDTO deleteManager = new DeletePlaceManagerDTO();


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        _selectDelList.Clear();
    }

    //추가모달의 선택 이벤트 핸들러
    private void OnSelected(List<ManagerDTO> data)
    {
        foreach (ManagerDTO m in data)
        {
            SelectList.Add(m);
        }

    }


    //목록에 담긴애들 중 체크
    private void OnChecked(ManagerDTO manager)
    {
        if(_selectDelList.Any(m => m.Id == manager.Id))
        {
            _selectDelList.RemoveAll(m => m.Id == manager.Id);
        }
        else
        {
            _selectDelList.Add(manager);
        }
    }

    private async void OnDelManager()
    {
        if (_selectDelList.Count == 0)
        {
            await JS.InvokeVoidAsync("alert", "삭제할 매니저를 선택해주세요.");
            return;
        }
        foreach(ManagerDTO m in _selectDelList)
        {
            SelectList.Remove(m);
        }
        _selectDelList.Clear();

    }
    private void OnModal()
    {
        _isModal = !_isModal;
    }

    // private void OnEdit()
    // {
    //     _editmode = !_editmode;
    //     _selectDelList.Clear();
    // }
}
