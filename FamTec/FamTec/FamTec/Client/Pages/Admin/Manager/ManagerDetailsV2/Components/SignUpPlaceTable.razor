@using FamTec.Client.Pages.CommonComponents
@using FamTec.Shared.Client.DTO
@* @using FamTec.Shared.Server.DTO.Admin *@
@using FamTec.Shared.Client.DTO.Place

<table class="table">
    <thead class="thead">
        <tr class="thead-tr">
            <th class="th">
                <span>
                    사업장명
                </span>
            </th>
            <th class="th">
                <span>
                    계약번호
                </span>
            </th>
            <th class="th">
                <span>
                    계약일자
                </span>
            </th>
            @if (EditMode)
            {
                <th class="th">

                </th>
            }
            
        </tr>
    </thead>
    <tbody class="tbody">
        @if(ListData == null)
        {
             <tr>
                <td colspan="100" style="text-align:center;">
                    <Loading />
                </td>
            </tr>
        }
        else if (ListData.Count == 0)
        {
            <tr>
                <td colspan="100" style="text-align:center;">
                    @* <Empty /> *@
                </td>
            </tr>
        }
        else
        {
             @foreach(var row in ListData)
            {
                <tr class="tbody-tr" @onclick=@(()=>onCheckItem(row))>
                    <td class="td @(EditMode ? "pointer" : "")">
                        @row.Name
                    </td>
                    <td class="td @(EditMode ? "pointer" : "")">
                        @row.ContractNum
                    </td>
                    <td class="td @(EditMode ? "pointer" : "")">
                        @row.ContractDt?.ToString("yyyy-MM-dd")
                    </td>
                    @if (EditMode)
                    {
                        <td class="td">
                            <input class="pointer" type="checkbox" checked="@CheckItems.Any(p => p.Id == row.Id)" />
                        </td>
                    }
                    
                </tr>
            }
        }
    </tbody>
</table>


@code {
    [Parameter] public List<AdminPlaceDTO> ListData { get; set; }
    [Parameter] public EventCallback<AdminPlaceDTO> OnCheck { get; set; }
    [Parameter] public bool EditMode{ get; set; }
    [Parameter] public List<AdminPlaceDTO> CheckItems { get; set; }


    List<AdminPlaceDTO> CheckedData = new List<AdminPlaceDTO>();

    protected override async Task OnParametersSetAsync()
    {
        CheckedData.Clear();
    }

    private bool IsChecked(AdminPlaceDTO place)
    {
        // CheckedData 리스트에서 현재 행에 해당하는 place가 있는지 확인
        return CheckedData != null && CheckedData.Any(x => x.PlaceCd == place.PlaceCd);
    }


    private async void onCheckItem(AdminPlaceDTO place)
    {


        await OnCheck.InvokeAsync(place);
    }
}
