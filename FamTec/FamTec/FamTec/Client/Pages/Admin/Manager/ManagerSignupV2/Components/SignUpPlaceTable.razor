@using FamTec.Client.Pages.CommonComponents
@using FamTec.Shared.Client.DTO


<table class="table">
    <thead class="thead">
        <tr class="thead-tr">
            <th class="th">
                <span>
                    사업장 코드
                </span>
            </th>
            <th class="th">
                <span>
                    사업장명
                </span>
            </th>
            <th class="th">
                <span>
                    비고
                </span>
            </th>
            <th class="th">
                <span>
                    계약번호
                </span>
            </th>
            <th class="th">
                <span>
                    계약일자
                </span>
            </th>
            <th class="th">
                
            </th>
        </tr>
    </thead>
    <tbody class="tbody">
        @if(ListData == null)
        {
             <tr>
                <td colspan="100" style="text-align:center;">
                    <Loading />
                </td>
            </tr>
        }
        else if (ListData.Count == 0)
        {
            <tr>
                <td colspan="100" style="text-align:center;">
                    <Empty />
                </td>
            </tr>
        }
        else
        {
             @foreach(var row in ListData)
            {
                <tr class="tbody-tr">
                    <td class="td">
                        @row.PlaceCd
                    </td>
                    <td class="td">
                        @row.Name
                    </td>
                    <td class="td">
                        @row.Note
                    </td>
                    <td class="td">
                        @row.ContractNum
                    </td>
                    <td class="td">
                        @row.ContractDt
                    </td>
                    <td class="td">
                        <input type="checkbox" checked="@IsChecked(row)" @onchange=" e => onCheckItem(e, row)" />
                    </td>
                </tr>
            }
        }
    </tbody>
</table>


@code {
    [Parameter] public List<PlaceTableDTO> ListData { get; set; }
    [Parameter] public EventCallback<(bool,PlaceTableDTO)> OnCheck { get; set; }

    List<PlaceTableDTO> CheckedData = new List<PlaceTableDTO>();


    private bool IsChecked(PlaceTableDTO place)
    {
        // CheckedData 리스트에서 현재 행에 해당하는 place가 있는지 확인
        return CheckedData != null && CheckedData.Any(x => x.PlaceCd == place.PlaceCd);
    }


    private async void onCheckItem(ChangeEventArgs e,PlaceTableDTO place)
    {
        //현재 컴포넌트내에서 검색과 체크 동기화
        if ((bool)e.Value == true)
        {
            CheckedData.Add(place);
        }
        else
        {
            CheckedData.Remove(place);
        }

        await OnCheck.InvokeAsync(((bool)e.Value, place));
    }
}
