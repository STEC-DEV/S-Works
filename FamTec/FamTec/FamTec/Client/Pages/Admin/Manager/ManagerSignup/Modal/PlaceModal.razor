@using FamTec.Client.Pages.Admin.Manager.ManagerSignup.Components
@using FamTec.Client.Pages.CommonComponents
@using FamTec.Shared.Client.DTO
@using FamTec.Shared.Server.DTO

<div class="placemodal-container yappear">
    <div class="placemodal-wrap">
        <div class="placemodal-title">
            <span class="title">
                사업장 조회
            </span>
        </div>
        <Input Placeholder="search" ValueChanged="@OnSearchTextChanged" />
        <div class="placemodal-content">
            <PlaceTable 
                ListData="@FilterPlaceList" 
                SelectedItems=@SelectedItems 
                SelectItems="@SelectItems"
                Count="@OnCount" />
        </div>
        <div class="placemodal-count">
            <span class="count">
                선택 : @SelectCount
            </span>
        </div>
        <div class="placemodal-btns">
            <Button Name="추가" Type=0 OnClick=OnAddList />
            <Button Name="닫기" Type=2 OnClick=OnModalClose />
        </div>
    </div>
</div>

@code {
    [Parameter] public EventCallback<bool> OnClose { get; set; }
    [Parameter] public List<PlaceTableDTO>? SelectedItems { get; set; }
    [Parameter] public EventCallback<List<PlaceTableDTO>> OnAdd { get; set; }

    List<PlaceTableDTO> SelectItems = new List<PlaceTableDTO>(); // 모달 내에서 선택한 리스트
    List<PlaceTableDTO> PlaceList = new List<PlaceTableDTO>(); // DB 전체 사업장 리스트 변수
    List<PlaceTableDTO> FilterPlaceList = new List<PlaceTableDTO>(); // 검색 리스트
    HashSet<int> SelectedIds = new HashSet<int>(); //선택 아이템 리스트
    int SelectCount = 0;
    string searchText = string.Empty; // 검색어 변수


    protected async override Task OnInitializedAsync()
    {
        SelectCount = SelectedItems.Count;
        await OnLoadPlace();
    }


    private async Task OnLoadPlace()
    {

        try
        {
            Console.WriteLine("[관리자 모드][사업장 조회]");
            ResponseList<PlaceTableDTO> res = await apiManager.GetListAsync<PlaceTableDTO>("AdminPlace/sign/GetAllWorksList");
            if (res.code != 200)
            {
                await JS.InvokeVoidAsync("alert", "사업장 조회 실패");
                return;
            }
            PlaceList = res.data;
            FilterPlaceList = PlaceList;
        }
        catch(Exception ex)
        {
            await JS.InvokeVoidAsync("alert", "[관리자 모드][사업장 조회] 실패\n" + ex);
            Console.WriteLine("[Manager][Add][PlaceModal] 사업장 조회 애러"+ ex);
            throw ex;
        }
    }


    /*
    * 검색 데이터 필터링
    */
    private void OnSearchTextChanged(string text)
    {
        // searchText = e.Value.ToString();
        searchText = text;

        FilterPlaceList = string.IsNullOrEmpty(searchText)
            ? PlaceList
            : PlaceList.Where(p => p.Name.Contains(searchText, StringComparison.OrdinalIgnoreCase) ||
                                   p.PlaceCd.Contains(searchText, StringComparison.OrdinalIgnoreCase) ||
                                   p.ContractNum.Contains(searchText, StringComparison.OrdinalIgnoreCase))
                        .ToList();
    }

    private async void OnAddList()
    {
        SelectedItems = SelectItems.ToList();

        SelectItems.Clear();
        await OnAdd.InvokeAsync(SelectedItems);
    }

    private async void OnCount(int count)
    {
        SelectCount += count;
        StateHasChanged();
    }

    private Task OnModalClose()
    {
        SelectItems.Clear();
        return OnClose.InvokeAsync(false);
    }
}
