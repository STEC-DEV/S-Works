@using FamTec.Client.Pages.Admin.Place.PlaceMain.Components
@using FamTec.Shared.Client.DTO
@using FamTec.Client.Pages.CommonComponents


<div class="form-container">
    <div class="form-title">
        <span class="title">매니저 정보</span>
    </div>
    <div class="form-input">
        <InputField 
            InputType="text" 
            Placeholder="Id"
            @bind-Value="@NewManager.UserId"
            Label="아이디"
            EditMode=EditMode
            Duplication=true
            />
        <InputField 
            InputType="password" 
            Placeholder="Password"
            @bind-Value="@NewManager.Password"
            Label="비밀번호"
            EditMode=EditMode
            />
        <InputField 
            InputType="password" 
            Placeholder="Password Check"
            Label="비밀번호 확인"
            EditMode=EditMode
            />
        <InputField 
            InputType="text" 
            Placeholder="Name"
            @bind-Value="@NewManager.Name"
            Label="이름"
            EditMode=EditMode
            />
        <InputField 
            InputType="text" 
            Placeholder="Phone"
            @bind-Value="@NewManager.Phone"
            Label="전화번호"
            EditMode=EditMode
            />
        <InputField 
            InputType="text" 
            Placeholder="Email"
            @bind-Value="@NewManager.Email"
            Label="이메일"
            EditMode=EditMode
            />
        <InputField 
            InputType="text"
            Value="@ManagerType"
            Placeholder="Type"            
            Label="계정 유형" 
            EditMode=false
            />
        <InputSelectField 
            Label="부서"
            SelectData="DepartmentList"
            SelectedValueChanged="HandleSelectedValueChange"
            IsReverse=true
            />
        <InputFile OnChange="@LoadImage" accept=".jpg,.jpeg,.png" />
    </div>
    
</div>

@code {
    [Parameter] public AddManagerDTO NewManager { get; set; }
    [Parameter] public List<DepartmentDTO> DepartmentList { get; set; }
    [Parameter] public bool EditMode { get; set; }
    [Parameter] public string? ManagerType { get; set; }
    private byte[] imageData;


    private void HandleSelectedValueChange(int value)
    {
        NewManager.DepartmentId = value;

    }




    private async Task LoadImage(InputFileChangeEventArgs e)
    {
        var allowedExtensions = new[] { ".png", ".jpg", ".jpeg", ".gif" };

        // 파일 확장자 추출
        var extension = Path.GetExtension(e.File.Name).ToLowerInvariant();

        // 확장자 검사
        if (!allowedExtensions.Contains(extension))
        {
            await JS.InvokeVoidAsync("alert", "허용되지 않은 파일 형식입니다. PNG, JPG, JPEG, GIF 파일만 업로드 가능합니다.");
            return;
        }


        var buffer = new byte[e.File.Size];
        await using var stream = e.File.OpenReadStream(maxAllowedSize: 1024 * 1024 * 10);
        await stream.ReadAsync(buffer);
        imageData = buffer;
        NewManager.Image = buffer;
        NewManager.ImageName = e.File.Name;
    }
}
