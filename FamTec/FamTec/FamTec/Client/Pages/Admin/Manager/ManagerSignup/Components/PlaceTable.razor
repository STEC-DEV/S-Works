@typeparam T

<table class="table">
    <thead class="thead">
        <tr class="<thead-tr">
            <th class="th">
                <span>
                    사업장 코드
                </span>
            </th>
            <th class="th">
                <span>
                    사업장명
                </span>
            </th>
            <th class="th">
                <span>
                    계약번호
                </span>
            </th>
            <th class="th">
                
            </th>
        </tr>
    </thead>
    <tbody class="tbody">
        @if(ListData == null)
        {
            <p>...Lodaing</p>
        }
        else
        {
             @foreach(var row in ListData)
            {
                var stringId = typeof(T).GetProperty("Id")?.GetValue(row)?.ToString();
                int Id = int.Parse(stringId);
                bool isChecked = SelectItems.Any(item => (int)typeof(T).GetProperty("Id")?.GetValue(row) == Id);
                @* bool isChecked = SelectedList.Contains(Id); *@

                <tr class="tbody-tr">
                    <td class="td">
                        @typeof(T).GetProperty("PlaceCd")?.GetValue(row)?.ToString()
                    </td>
                    <td class="td">
                        @typeof(T).GetProperty("Name")?.GetValue(row)?.ToString()
                    </td>
                    <td class="td">
                        @typeof(T).GetProperty("ContractNum")?.GetValue(row)?.ToString()
                    </td>
                    <td class="td">
                        <input type="checkbox" checked="@isChecked" @onchange=" e => onCheckItem(Id, (bool)((ChangeEventArgs)e).Value, row)" />
                    </td>
                </tr>
            }
        }
    </tbody>
</table>


@code {
    [Parameter] public List<T> ListData { get; set; }
    [Parameter] public List<T> SelectItems { get; set; }
    [Parameter] public EventCallback<List<T>> SelectObject { get; set; }
    [Parameter] public HashSet<int> SelectedList { get; set; }


    private void onCheckItem(int id, bool isChecked, T row)
    {
        if (isChecked)
        {
            if (!SelectItems.Contains(row))
            {
                SelectItems.Add(row);
            }
        }
        else
        {
            var itemToRemove = SelectItems.FirstOrDefault(item => (int)typeof(T).GetProperty("Id")?.GetValue(item) == id);
            if (itemToRemove != null)
            {
                SelectItems.Remove(itemToRemove);
            }
        }
        SelectObject.InvokeAsync(SelectItems);
        Console.WriteLine("선택 값 : "+ id); ;
    }

    private void OnAdd()
    {
        
    }
}
