@using FamTec.Client.Pages.Admin.Manager.ManagerMain.Modal
@using FamTec.Shared.Client.DTO
@using FamTec.Client.Pages.CommonComponents
@using FamTec.Shared.Server.DTO

<ul class="depart-list">
    @if(DataList == null)
    {
        <p>Loading...</p>
    }
    else
    {
        @if (Edit)
        {
            <li class="depart-add-form">
                
                <Toggle
                    Title="사업장 관리부서"
                    @bind-Value=@newDepartment.ManagerYN
                    IsChecked="@newDepartment.ManagerYN"
                    EditMode=true
                    />
                <div class="add-form">
                    <Input Type="text" Placeholder="부서명" @bind-Value=@newDepartment.Name />
                    <Button Name="추가" OnClick="@AddDepartment" />
                </div>
                
            </li>
        }

        @foreach (var item in DataList)
        {
            
            <li class="depart-item @(InputEdit ? "edit": "" ) "  >
                <span class="item-title" @onclick=@(()=>OnModal(item.Id)) @onclick:stopPropagation>
                    @item.Name
                </span>
                @if (Edit)
                {
                    <div class="item-option">
                        <input class="depart-select"
                               type="checkbox"
                               value="@item.Id"
                               @onchange="(e)=>InVokeCheckboxSelect(e, item.Id)" />
                    </div>
                }
            </li>
            @if ( Edit && openModalId == item.Id)
            {
                <ModalBackground>
                    <ChildComponent>
                        <EditDepartment 
                            DepartmentId="openModalId" 
                            OnCancel="CloseModal" 
                            OnLoadDepartment="OnLoadDepartments"
                            Data="item" />
                    </ChildComponent>
                </ModalBackground>
            }
        }

        
    }
    
</ul>
@code {
    [Parameter] public List<DepartmentDTO> DataList { get; set; }
    [Parameter] public bool Edit { get; set; }
    [Parameter] public EventCallback<(bool ,int)> Select { get; set; }
    [Parameter] public EventCallback OnLoadDepartments { get; set; }
    [Parameter] public EventCallback OnListSync { get; set; }
    [Parameter] public bool AddMode {get; set;}


    private Dictionary<int, bool> editStates = new Dictionary<int, bool>();
    AddDepartmentDTO newDepartment = new AddDepartmentDTO();

    public bool InputEdit { get; set; } = false;
    private int? openModalId = null;



    private async Task InVokeCheckboxSelect(ChangeEventArgs e, int id)
    {
        bool isChecked = (bool)(e.Value ?? false);
        await Select.InvokeAsync((isChecked, id));
    }


    /*
    * (POST)부서 추가
    */
    private async Task AddDepartment()
    {
        try
        {
            Console.WriteLine(newDepartment.Name == null);
            if (string.IsNullOrEmpty(newDepartment.Name))
            {
                await JS.InvokeVoidAsync("alert", "부서명을 입력해 주세요.");
                Console.WriteLine("입력된 값이 없습니다.");
                return;
            }
            ResponseUnit<AddDepartmentDTO> resDepartment = await apiManager.PostAsync<AddDepartmentDTO>("Department/sign/AddDepartment", newDepartment);
            if (resDepartment.code != 200)
            {
                await JS.InvokeVoidAsync("alert", "부서 추가 실패.");
                newDepartment = new AddDepartmentDTO();
                return;
            }

            await OnLoadDepartments.InvokeAsync();
            await OnListSync.InvokeAsync();
            StateHasChanged();
            newDepartment = new AddDepartmentDTO();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"[Admin][ModalDepartment] 부서 추가 에러 : {ex.Message}");
        }
    }

    private void OnModal(int id)
    {
        if (!Edit)
        {
            return;
        }
        openModalId = id;
    }

    private void CloseModal()
    {
        openModalId = 0;
    }

}
