@using FamTec.Client.Pages.CommonComponents
@using FamTec.Shared.Client.DTO
@using FamTec.Shared.Server.DTO


<div class="modal">
    <div class="header">
        <span class="title">
            그룹 수정
        </span>
    </div>
    <div class="content">
        
        <InputCol
            Label="그룹명"
            @bind-Value=@_edit.Name
            />
        @* <Toggle Title="사업장 관리부서"
                @bind-Value=@_editCheck
                IsChecked="@Data.ManagerYN"
                EditMode=true /> *@
    </div>
    <div class="btns">
        <Button Name="저장" Type="0" OnClick="OnSubmitEdit" />
        <Button Name="취소" Type="1" OnClick="OnCanceled" />
    </div>
</div>

@code {
    [Parameter] public int? DepartmentId { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }
    [Parameter] public EventCallback OnLoadDepartment{ get; set; }
    [Parameter] public EventCallback OnLoadManager{ get; set; }
    [Parameter] public DepartmentDTO Data { get; set; }

    string _editDep = "";
    bool _editCheck;

    DepartmentDTO _edit = new DepartmentDTO();

    protected override async Task OnParametersSetAsync()
    {
        _edit = new DepartmentDTO(Data);
    }


    //부서 수정
    private async Task OnSubmitEdit()
    {

        try
        {
            if (Data.Name.ToLower() == _edit.Name.ToLower())
            {
                await JS.InvokeVoidAsync("alert", "변경 사항이 존재하지 않습니다.");
                return;
            }

            ResponseUnit<DepartmentDTO> resUpdate = await apiManager.PostAsync<DepartmentDTO>("Department/sign/UpdateDepartment", _edit);
            if (resUpdate.code != 200)
            {
                await JS.InvokeVoidAsync("alert", resUpdate.message);
                await OnCanceled();
                return;
            }

            await OnLoadDepartment.InvokeAsync();
            await OnLoadManager.InvokeAsync();
            await OnCanceled();
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
            await JS.InvokeVoidAsync("alert", "저장 실패");
        }
        
 
    }

    private async Task OnCanceled()
    {
        await OnCancel.InvokeAsync();
    }

}
