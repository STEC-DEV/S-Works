@using FamTec.Client.Pages.CommonComponents
@using FamTec.Client.Pages.Admin.Manager.ManagerMain.Modal
@using FamTec.Shared.Client.DTO
@using FamTec.Shared.Server
@using FamTec.Shared.Server.DTO


@inject HttpClient HttpClient

<div class="depart-container">
    <div class="depart-wrap">
        <div class="depart-title">
            <span class="title">
                관리자 그룹
            </span>
        </div>
        <div class="depart-content">
            @if(departmentList == null)
            {
                <Loading/>
            }
            else
            {
                <DepartmentList DataList="departmentList"
                                OnLoadDepartments="LoadDepartments"
                                Edit=EditMode
                                OnSelectedDepartment=OnSelectedDepartment />
            }
            
        </div>
        <div class="depart-btns">
            @if(UserType)
            {
                if (EditMode)
                {
                    <Button Name="확인" Type="0" OnClick="OnEditMode" />
                }
                else
                {
                    <Button Name="수정" OnClick="@OnEditMode" Type=0 />
                }
                
            }
            
        </div>
    </div>
</div>

@code {
    [Parameter] public bool UserType{ get; set; }
    [Parameter] public EventCallback<string> OnSelectedDepartment{get;set;}

    List<DepartmentDTO>? departmentList;
    private bool is_openModal = false;
    private bool EditMode = false;


    protected override async Task OnInitializedAsync()
    {
        await LoadDepartments();

    }

    private async Task LoadDepartments()
    {
        try
        {
            ResponseList<DepartmentDTO> resDepartment = await apiManager.GetListAsync<DepartmentDTO>("Department/sign/GetDepartmentList");
            if (resDepartment.code != 200)
            {
                await JS.InvokeVoidAsync("alert", "부서 조회 실패"); 
                return;
            }
            if(resDepartment.data == null)
            {
                departmentList = new List<DepartmentDTO>();
            }
            else
            {
                departmentList = resDepartment.data;
            }

            StateHasChanged();
        }catch(Exception ex)
        {
            Console.WriteLine($"[Admin][Department] 클라이언트 부서 조회 에러");
        }

    }

    private async Task ReloadDepartments()
    {
        await LoadDepartments();
    }






    /*
    * click add
    */
    private void OnEdit()
    {
        Console.WriteLine("모달");
        is_openModal = true;
    }

    private void OnModalClose()
    {
        is_openModal = false;
        StateHasChanged();
    }

    private void OnEditMode()
    {
        EditMode = !EditMode;
    }
}

