@layout MainLayout2

@page "/test"

@using Microsoft.JSInterop
@inject IJSRuntime JS

<style>
    #myStackedChart {
        width: 600px !important;
        height: 400px !important;
    }
</style>

<!-- 차트를 표시할 캔버스 -->
<canvas id="myStackedChart" width="600" height="400"></canvas>

<!-- 차트를 다시 그리기 위한 버튼 -->
<button @onclick="RedrawChart">Redraw Chart</button>

@code {
    // 차트 데이터 및 옵션 초기화
    private string[] Labels = { "January", "February", "March", "April", "May" };
    private int[] Dataset1 = { 10, 20, 30, 40, 50 };
    private int[] Dataset2 = { 5, 15, 25, 35, 45 };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await InitializeChart();
        }
    }

    private async Task InitializeChart()
    {
        await JS.InvokeVoidAsync("initializeStackedChart", Labels, Dataset1, Dataset2);
    }

    private async Task RedrawChart()
    {
        // 예시: 데이터 변경 (랜덤 데이터로 변경)
        var random = new Random();
        Dataset1 = Dataset1.Select(x => random.Next(0, 50)).ToArray();
        Dataset2 = Dataset2.Select(x => random.Next(0, 50)).ToArray();

        // 데이터만 업데이트하여 차트를 다시 그리기 위해 JavaScript 함수 호출
        await JS.InvokeVoidAsync("initializeStackedChart", Labels, Dataset1, Dataset2);
    }
}